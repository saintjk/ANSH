/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ansh_gui;

import static ansh_gui.export_pdf.IMAGE;
import ansh_gui.status.modify;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.apache.commons.io.FilenameUtils;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.title.Title;
import org.jfree.data.category.*;
import org.jfree.data.general.DefaultPieDataset;
import subject.Subject_form;
import user_ctrl.UsersMDI;
import user_ctrl.UsersRegistration;
import user_view.project_browse;
import user_view.scan_log;
import user_view.search_result;



/**
 *
 * @author lab
 */
public final class Main_menu extends javax.swing.JFrame {
Connection con=null;
 private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 5,
            Font.BOLD);
  private static String FILE;
   File file;
   
 public static final String IMAGE = "Ansh_Login.png";
    private static Font small = new Font(Font.FontFamily.TIMES_ROMAN, 10,
            Font.NORMAL);
PreparedStatement pst=null;
ResultSet rs=null;
 String name,u_id;
 int sid;
    /**
     * Creates new form Main_menu
     */
    public Main_menu() {
    try {
        initComponents();
        
        projects.getTableHeader().setUI(null);
        projectsog.getTableHeader().setUI(null);
        paper.getTableHeader().setUI(null);
             setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
  con= Connect.ConnectDB();  
 // stats.hide();
  chartpanel.setBackground(null);
   generate_status();
 // chartpanel.setPreferredSize(chartsize());
  ChartPanel CP = new ChartPanel(generatebarChart());

  CP.setDomainZoomable(true);
  CP.setPreferredSize(chartsize());
   ChartPanel Pie = new ChartPanel(generatePieChart());
   pipanel.setLayout(new java.awt.BorderLayout());
  pipanel.add(Pie);
  chartpanel.setLayout(new java.awt.BorderLayout());
  chartpanel.add(CP, BorderLayout.EAST);
        String sqlp = "SELECT Name FROM `Project`";
        pst = con.prepareStatement(sqlp);
   
        //pst.setString(1,uname );
        rs=pst.executeQuery(); 
        while(rs.next())
        {
            ptable.addItem(rs.getString(1));
        }
  
        String sqlc = "SELECT * FROM `Master_record`";
        pst = con.prepareStatement(sqlc);
   
        //pst.setString(1,uname );
        rs=pst.executeQuery();
       // settings fun = new settings();
      
        while(rs.next())
        {
            
            
            searchcombo.addItem(rs.getString(2));
            searchcombo.addItem(rs.getString(3));
            searchcombo.addItem(rs.getString(9));
            
            
            
        }
        
        AutoCompleteDecorator.decorate(searchcombo);
    } catch (SQLException ex) {
          String n = ex.toString();
             n=n.substring(n.lastIndexOf(":")+1);
             
             
             JOptionPane.showMessageDialog(null, n, "ANSH", INFORMATION_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        as = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stats = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        projects = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        projectsog = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        paper = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        searchcombo = new javax.swing.JComboBox<String>();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ptable = new javax.swing.JComboBox<String>();
        jButton2 = new javax.swing.JButton();
        more = new javax.swing.JButton();
        chartpanel = new javax.swing.JPanel();
        pipanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MAIN MENU | ANSH");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(891, 484));
        setPreferredSize(new java.awt.Dimension(1020, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton5.setText("Log Out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Settings");

        jLabel4.setMaximumSize(new java.awt.Dimension(400, 185));
        jLabel4.setMinimumSize(new java.awt.Dimension(300, 85));
        jLabel4.setName(""); // NOI18N

        as.setBackground(new java.awt.Color(29, 29, 29));
        as.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        as.setForeground(new java.awt.Color(220, 220, 220));
        as.setText("Advanced Search");
        as.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(29, 29, 29));
        jButton1.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(220, 220, 220));
        jButton1.setText("Users");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(29, 29, 29));
        jButton3.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(220, 220, 220));
        jButton3.setText("Project");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(28, 23, 17));
        jButton4.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(220, 220, 220));
        jButton4.setText("Subject");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(29, 29, 29));
        jButton8.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(220, 220, 220));
        jButton8.setText("Master Entry");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(29, 29, 29));
        jButton10.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jButton10.setForeground(new java.awt.Color(220, 220, 220));
        jButton10.setText("Scan Log");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(632, 288));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 288));

        jLabel1.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jLabel1.setText("ANSH Status");

        jLabel5.setText("Projects");

        jLabel6.setText("Project(OnGoing)");

        jLabel7.setText("Paper");

        projects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane1.setViewportView(projects);

        projectsog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane2.setViewportView(projectsog);

        paper.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane3.setViewportView(paper);

        jButton11.setText("Export");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statsLayout = new javax.swing.GroupLayout(stats);
        stats.setLayout(statsLayout);
        statsLayout.setHorizontalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addContainerGap())
        );
        statsLayout.setVerticalGroup(
            statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton11)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jButton6.setText("Modify");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
            .addComponent(stats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(as, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(as, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        searchcombo.setEditable(true);
        searchcombo.setMaximumRowCount(3);
        searchcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));
        searchcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcomboActionPerformed(evt);
            }
        });
        searchcombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchcomboKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchcomboKeyPressed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_mgr/sr.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Project Data Log");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Project Name");

        ptable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        ptable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ptableActionPerformed(evt);
            }
        });

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        more.setText("More");
        more.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ptable, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(more)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ptable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(more))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout chartpanelLayout = new javax.swing.GroupLayout(chartpanel);
        chartpanel.setLayout(chartpanelLayout);
        chartpanelLayout.setHorizontalGroup(
            chartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        chartpanelLayout.setVerticalGroup(
            chartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 162, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pipanelLayout = new javax.swing.GroupLayout(pipanel);
        pipanel.setLayout(pipanelLayout);
        pipanelLayout.setHorizontalGroup(
            pipanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pipanelLayout.setVerticalGroup(
            pipanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        jMenu1.setText("Master Entry");
        jMenu1.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem3.setText("New Entry");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem7.setText("View Entry");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem8.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem8.setText("Modify Entry");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Users");
        jMenu2.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem4.setText("Registration");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenu4.setText("User Data");
        jMenu4.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N

        jMenuItem17.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem17.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem17.setText("Login Details");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem17);

        jMenuItem18.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem18.setText("Data Details");
        jMenu4.add(jMenuItem18);

        jMenuItem6.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem6.setText("Project Details");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenu2.add(jMenu4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem5.setText("Change Password");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu7.setText("Project");
        jMenu7.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenu7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu7ActionPerformed(evt);
            }
        });

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem13.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem13.setText("Profile Entry");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem13);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem11.setText("Edit/View Project Data");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem22.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem22.setText("Disable");
        jMenu7.add(jMenuItem22);

        jMenuBar1.add(jMenu7);

        jMenu3.setText("Subject");
        jMenu3.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem10.setText("Registration");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem19.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem19.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem19.setText("Services");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem19);

        jMenu8.setText("Subject Information");
        jMenu8.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N

        jMenuItem9.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem9.setText("Clinical Data");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem9);

        jMenuItem14.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem14.setText("Personal Data");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem14);

        jMenuItem23.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem23.setText("Sociodemographic Data");
        jMenu8.add(jMenuItem23);

        jMenuItem24.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem24.setText("GPE Data");
        jMenu8.add(jMenuItem24);

        jMenu3.add(jMenu8);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Help");
        jMenu5.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });

        jMenuItem12.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem12.setText("About");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem12);

        jMenuItem15.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jMenuItem15.setText("Contact");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem15);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chartpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pipanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(1300, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(89, 89, 89)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton5)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(searchcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(chartpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(pipanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(83, 83, 83)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(411, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void generate_status() throws SQLException
{

   String sqls = "SELECT `Name` FROM `Project` WHERE 1;";
         pst = con.prepareStatement(sqls);
   
        //pst.setString(1,uname );
        rs=pst.executeQuery(); 
    DefaultTableModel model = (DefaultTableModel) DbUtils.resultSetToTableModel(rs);
    projects.setModel(model);
    sqls = "SELECT `Name` FROM `Paper` WHERE 1;";
        pst = con.prepareStatement(sqls);
   
        //pst.setString(1,uname );
        rs=pst.executeQuery(); 
model = (DefaultTableModel) DbUtils.resultSetToTableModel(rs);
    paper.setModel(model);
        sqls = "SELECT `Name` FROM `Project_OnGoing` WHERE 1;";
        pst = con.prepareStatement(sqls);
   
        //pst.setString(1,uname );
        rs=pst.executeQuery(); 
model = (DefaultTableModel) DbUtils.resultSetToTableModel(rs);
    projectsog.setModel(model);
}



 public void export_table() throws FileNotFoundException, BadElementException, IOException
 {
                  JFileChooser fc = new JFileChooser();
        fc.showSaveDialog(this);
        FILE = fc.getSelectedFile().getAbsolutePath();
          file = fc.getSelectedFile();

   System.out.print(FILE);
     try {

      //  System.out.print(path);
                  Document doc = new Document();
      //  System.out.print(path);
                                    if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("pdf")) {
               try {
           
            PdfWriter.getInstance(doc, new FileOutputStream(FILE));


//            addMetaData(document);
       //     addTitlePage(document);
       //     addContent(document);
      
        } catch (Exception e) {
            e.printStackTrace();
        }
        }
        else
            FILE = FILE+".pdf";
            try {
           
            PdfWriter.getInstance(doc, new FileOutputStream(FILE));


//            addMetaData(document);
       //     addTitlePage(document);
       //     addContent(document);

        } catch (Exception e) {
            e.printStackTrace();
        }
            doc.open();
            Image img = Image.getInstance(IMAGE);
            img.scalePercent(40);
            img.setAlignment(Element.ALIGN_CENTER);
            doc.add(img);
        

          // filename = path.substring(path.lastIndexOf("/") + 1);
        //   filename = filename.substring(0, filename.length() - 4);
           //      addMetaData(doc,filename);
           
            PdfPTable pdfTable = new PdfPTable(projects.getColumnCount());
            //adding table headers
            for (int i = 0; i < projects.getColumnCount(); i++) {
             PdfPCell c1 = new PdfPCell(new Phrase("Projects",subFont));
             c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
             c1.setHorizontalAlignment(Element.ALIGN_CENTER);  
             pdfTable.addCell(c1);
            }
            //extracting data from the JTable and inserting it to PdfPTable
        //    System.out.print(table.getRowCount());
            for (int rows = 0; rows < projects.getRowCount(); rows++) {
                for (int cols = 0; cols < projects.getColumnCount(); cols++) {
                      PdfPCell c2 = new PdfPCell(new Phrase(projects.getModel().getValueAt(rows, cols).toString(),small));
                        c2.setHorizontalAlignment(Element.ALIGN_CENTER);  
                       
                       
                    pdfTable.addCell(c2);

                }
            }
                    PdfPTable pdfTable0 = new PdfPTable(projectsog.getColumnCount());
            //adding table headers
            for (int i = 0; i < projectsog.getColumnCount(); i++) {
             PdfPCell c1 = new PdfPCell(new Phrase("Projects OnGoing",subFont));
             c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
             c1.setHorizontalAlignment(Element.ALIGN_CENTER);  
             pdfTable0.addCell(c1);
            }
            //extracting data from the JTable and inserting it to PdfPTable
        //    System.out.print(table.getRowCount());
            for (int rows = 0; rows < projectsog.getRowCount(); rows++) {
                for (int cols = 0; cols < projectsog.getColumnCount(); cols++) {
                      PdfPCell c2 = new PdfPCell(new Phrase(projectsog.getModel().getValueAt(rows, cols).toString(),small));
                        c2.setHorizontalAlignment(Element.ALIGN_CENTER);  
                       
                       
                    pdfTable0.addCell(c2);

                }
            }
                    PdfPTable pdfTable1 = new PdfPTable(paper.getColumnCount());
            //adding table headers
            for (int i = 0; i < paper.getColumnCount(); i++) {
             PdfPCell c1 = new PdfPCell(new Phrase("Paper",subFont));
             c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
             c1.setHorizontalAlignment(Element.ALIGN_CENTER);  
             pdfTable1.addCell(c1);
            }
            //extracting data from the JTable and inserting it to PdfPTable
        //    System.out.print(table.getRowCount());
            for (int rows = 0; rows < paper.getRowCount(); rows++) {
                for (int cols = 0; cols < paper.getColumnCount(); cols++) {
                      PdfPCell c2 = new PdfPCell(new Phrase(paper.getModel().getValueAt(rows, cols).toString(),small));
                        c2.setHorizontalAlignment(Element.ALIGN_CENTER);  
                       
                       
                    pdfTable1.addCell(c2);

                }
            }
            Paragraph paragraph = new Paragraph();
                  paragraph.add(new Paragraph(" "));
            doc.add(pdfTable);
           doc.add(paragraph);
             doc.add(pdfTable0);
                        doc.add(paragraph);
            doc.add(pdfTable1);
              doc.close();
        
         //   System.out.println("done");
        } catch (DocumentException ex) {
            Logger.getLogger(export_pdf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(export_pdf.class.getName()).log(Level.SEVERE, null, ex);
        }

         

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          Projectmgr frm=new Projectmgr();
        frm.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

public Dimension chartsize() {
    // given some values of w & h
    return new Dimension(1100,480);
}
   public JFreeChart generatebarChart() throws SQLException {
		//DefaultPieDataset dataSet = new DefaultPieDataset();
       DefaultCategoryDataset dataSet =new DefaultCategoryDataset( );
           
      int i, ad,mci,pd,pad,hy,ho,dmt;

    String mciy,ady,pdy,pady,hyy,hoy,dmty;
     
                                        String sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%AD%' GROUP BY RIGHT(DOS,2)";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                                 i=1;
                                                   
                                          while(rs.next())
                                                {
                                                  
                                                                         ad=rs.getInt(1);
                                              ady=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(ad, "AD",ady);
                                                i++;}
                                          sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%MCI%' GROUP BY RIGHT(DOS,2)";
                                              pst = con.prepareStatement(sql1);
                                              i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                     
                                                                                   mci=rs.getInt(1);
                                              mciy=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(mci, "MCI",mciy);
//                                                    mci[i]=Integer.parseInt(rs.getString(1));
//                                              
//                                                mciy[i]=rs.getString(2);
//                                                              dataSet.setValue(mci[i], "MCI","Year");
                                                i++;
                                                }
                                          sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%PD%' GROUP BY RIGHT(DOS,2) ";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                                i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                                               pd=rs.getInt(1);
                                              pdy=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(pd, "PD",pdy);
                                                i++;
                                                         }
                                          sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%PAD%' GROUP BY RIGHT(DOS,2)";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                             i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                                               pad=rs.getInt(1);
                                              pady=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(pad, "PAD",pady);
                                                i++;
                                                }   
                                               sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%HY%' GROUP BY RIGHT(DOS,2)";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                                 i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                                               hy=rs.getInt(1);
                                              hyy=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(hy, "HY",hyy);
                                                i++;
                                                }
                                          sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%HO%' GROUP BY RIGHT(DOS,2) ";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                              i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                                               ho=rs.getInt(1);
                                              hoy=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(ho, "HO",hoy);
                                                i++;
                                                }
                                     
                                          sql1 = "SELECT COUNT(SubjectId),RIGHT(DOS,2)AS 'Year' FROM `Master_record` WHERE Status LIKE '%mentia%' GROUP BY RIGHT(DOS,2) ";
                                              pst = con.prepareStatement(sql1);
                                                 rs=pst.executeQuery();       
                                                     i=1; 
                                              rs=pst.executeQuery();       
                                          while(rs.next())
                                                {
                                                                              dmt=rs.getInt(1);
                                              dmty=rs.getString(2);
                                                
                                                    
                                       
                                                     dataSet.setValue(dmt, "Dementia",dmty);
                                                i++;
                                                }
                                   
		//JFreeChart chart = ChartFactory.createPieChart(
		//		"Current Status", dataSet, true, true, true);
JFreeChart chart = ChartFactory.createBarChart3D("Status Per Year", "Year","Number",dataSet, PlotOrientation.VERTICAL,true, true, false);
chart.createBufferedImage(650, 420);
CategoryPlot p = chart.getCategoryPlot();
chart.setBackgroundPaint(null);
p.setRangeGridlinePaint(Color.BLACK);
ChartFrame frame = new ChartFrame("Status",chart);
frame.setVisible(true);
BarRenderer br = (BarRenderer) p.getRenderer();
br.setMaximumBarWidth(0.55);

		return chart;
	} 
    
public  JFreeChart generatePieChart() throws SQLException {
		DefaultPieDataset dataSet = new DefaultPieDataset();
		  String sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%AD%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("AD", rs.getInt(1)); }
                                       sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%PD%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("PD", rs.getInt(1)); }
                                           sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%PAD%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("PAD", rs.getInt(1)); }
                                           sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%MCI%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("MCI", rs.getInt(1)); }
                                           sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%HY%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("HY", rs.getInt(1)); }
                                               sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%HO%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("HO", rs.getInt(1)); }
                                               sql2 = "SELECT COUNT(SubjectId) FROM `Master_record` WHERE Status LIKE '%mentia%' ";
                                              pst = con.prepareStatement(sql2);
                                                 rs=pst.executeQuery();       
                                      if(rs.next())
                                                { dataSet.setValue("Dementia", rs.getInt(1)); }
		JFreeChart chart = ChartFactory.createPieChart(
				"Overall Status", dataSet, true, true, false);
                                    chart.setBackgroundPaint(null);
                                    PiePlot plot = (PiePlot) chart.getPlot();
		java.awt.Font fnt = new java.awt.Font("TimesNewRoman", Font.BOLD, 14);
		plot.setLabelFont(fnt);
                plot.setLabelBackgroundPaint(null);
                plot.setLabelOutlinePaint(null);
                plot.setLabelShadowPaint(null);
                           plot.setSectionPaint("HY", new Color(120, 0, 120));
                            plot.setSectionPaint("HO", new Color(240,128,128));
                             plot.setSectionPaint("MCI", new Color(46, 131, 148));
                              plot.setSectionPaint("AD", new Color(0, 0, 128));
                                plot.setSectionPaint("PAD", new Color(0, 255, 255));
                               
		return chart;
	}

    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Subject_form frm=new Subject_form();
frm.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Master_Entry frm= new Master_Entry();
        frm.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      UsersMDI frm = new UsersMDI();
      frm.setVisible(true); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void asActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asActionPerformed
  
    }//GEN-LAST:event_asActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    try {
        con= Connect.ConnectDB();

        String sql2 = "SELECT MAX(sessionid) FROM users_log WHERE u_id = ? ";
        pst = con.prepareStatement(sql2);
        
        pst.setString(1,"admin" );
        //JOptionPane.showMessageDialog(null, u_id);
        rs=pst.executeQuery();
        
        if(rs.next())
        {
            
            sid=Integer.parseInt(rs.getString(1));
           
        }
        java.awt.Window win[] = java.awt.Window.getWindows();
        for(int i=0;i<win.length;i++){
            win[i].dispose();
        }
        Calendar calendar = Calendar.getInstance();
    java.sql.Timestamp ourJavaTimestampObject = new java.sql.Timestamp(calendar.getTime().getTime());
        String sql_up= "UPDATE  users_log  SET  logouttime  = ?  WHERE sessionid  = ?";
        pst=con.prepareStatement(sql_up);
         pst.setTimestamp(1, ourJavaTimestampObject);
        //   JOptionPane.showMessageDialog(null, sid);
        pst.setInt(2,sid );
        pst.execute();
        ansh_gui.Login frm=new ansh_gui.Login();
        frm.setVisible(true);
    } catch (SQLException ex) {
           String n = ex.toString();
             n=n.substring(n.lastIndexOf(":")+1);
             
             
             JOptionPane.showMessageDialog(null, n, "ANSH", INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Master_Entry frm= new Master_Entry();
        frm.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
     
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        UsersRegistration frm = new UsersRegistration();
        frm.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
login_det frm = new login_det();
        frm.setVisible(true); 
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
      
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
       
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenu7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
     
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
      
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
    
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
      
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
     
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
 
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed

    }//GEN-LAST:event_jMenu5ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       String ObjButtons[] = {"Yes","No"};
    int PromptResult = JOptionPane.showOptionDialog(null, 
        "Are you sure you want to exit?", "ANSH", 
        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, 
        ObjButtons,ObjButtons[1]);
    if(PromptResult==0)
    {
                con= Connect.ConnectDB();
           try {
                String sql2 = "SELECT MAX(sessionid) FROM users_log WHERE u_id = ? ";
        pst = con.prepareStatement(sql2);
        
        pst.setString(1,"admin" );
        //JOptionPane.showMessageDialog(null, u_id);
        rs=pst.executeQuery();
        
        if(rs.next())
        {
            
            sid=Integer.parseInt(rs.getString(1));
           
        }
              java.awt.Window win[] = java.awt.Window.getWindows();
               for(int i=0;i<win.length;i++){
                   win[i].dispose();
               }
               Calendar calendar = Calendar.getInstance();
               java.sql.Timestamp ourJavaTimestampObject = new java.sql.Timestamp(calendar.getTime().getTime());
               String sql_up= "UPDATE  users_log  SET  logouttime  = ?  WHERE sessionid  = ?";
               pst=con.prepareStatement(sql_up);
               pst.setTimestamp(1, ourJavaTimestampObject);
               //   JOptionPane.showMessageDialog(null, sid);
               pst.setInt(2,sid );
               pst.execute();
               System.exit(0);
               
           } catch (SQLException ex) {
                 String n = ex.toString();
             n=n.substring(n.lastIndexOf(":")+1);
             
             
             JOptionPane.showMessageDialog(null, n, "ANSH", INFORMATION_MESSAGE);
           }
    }
    }//GEN-LAST:event_formWindowClosing

    private void searchcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcomboActionPerformed

    }//GEN-LAST:event_searchcomboActionPerformed

    
    
    private void search()
    {
        String key = (String) searchcombo.getSelectedItem();
       // JOptionPane.showMessageDialog(null, key);
        search_result frm = new search_result(key);
               
        frm.setVisible(true);
        
    }
    private void searchcomboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchcomboKeyTyped
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            search();
        }
    }//GEN-LAST:event_searchcomboKeyTyped

    private void searchcomboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchcomboKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            search();
        }
    }//GEN-LAST:event_searchcomboKeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        search();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
   scan_log cl = new scan_log();
   cl.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      if(ptable.getSelectedItem()=="-")
      {
          JOptionPane.showMessageDialog(null, "Please Select a Project", "ANSH", INFORMATION_MESSAGE);
      }
      else
      {
          project_browse obj = new project_browse((String) ptable.getSelectedItem());
          
          obj.setVisible(true);
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ptableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ptableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ptableActionPerformed

    private void moreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreActionPerformed
      project_data_viewer tf = new project_data_viewer();
      tf.setVisible(true);
    }//GEN-LAST:event_moreActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
    try {
        export_table();
    } catch (BadElementException ex) {
        Logger.getLogger(Main_menu.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(Main_menu.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       modify md = new modify();
       md.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main_menu frm = new Main_menu();
                frm.setVisible(true);
                frm.setExtendedState(MAXIMIZED_BOTH);
       
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton as;
    private javax.swing.JPanel chartpanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton more;
    private javax.swing.JTable paper;
    private javax.swing.JPanel pipanel;
    private javax.swing.JTable projects;
    private javax.swing.JTable projectsog;
    private javax.swing.JComboBox<String> ptable;
    private javax.swing.JComboBox<String> searchcombo;
    private javax.swing.JPanel stats;
    // End of variables declaration//GEN-END:variables
}
