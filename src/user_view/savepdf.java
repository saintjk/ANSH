/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_view;
import java.awt.event.KeyEvent;
import java.io.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.JTable;
import org.apache.commons.io.FilenameUtils;


/**
 *
 * @author lab
 */
public class savepdf extends javax.swing.JFrame {
String path;
String filename,filedat;
JTable mt;
    /**
     * Creates new form save
     */
    public savepdf(JTable master_table) {
       // xlsave.setFileFilter(new FileTypeFilter(".xlsx","Excel File"));
        mt = master_table;
   
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xlsave = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Save File");

        xlsave.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        xlsave.setApproveButtonText("Save");
        xlsave.setName("Search Result"); // NOI18N
        xlsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlsaveActionPerformed(evt);
            }
        });
        xlsave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                xlsaveKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xlsave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xlsave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void xlsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlsaveActionPerformed
                    path=xlsave.getSelectedFile().getAbsolutePath();
                    filename=xlsave.getSelectedFile().getName();
                    File file = xlsave.getSelectedFile();
                    
if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("xls")) {
    // filename is OK as-is
} else {
    file = new File(file.toString() + ".xls");  // append .xml if "foo.jpg.xml" is OK
    file = new File(file.getParentFile(), FilenameUtils.getBaseName(file.getName())+".xls"); // ALTERNATIVELY: remove the extension (if any) and replace it with ".xml"
}
        // filedat =  path+"/"+ filename;
    try {
        write2xl frm = new write2xl(mt,path);
        frm.wrfun();
        JOptionPane.showMessageDialog(null, "File saved successfully", "ANSH", INFORMATION_MESSAGE);
        this.hide();

    } catch (IOException ex) {
        Logger.getLogger(savepdf.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, ex);
    }
         
    }//GEN-LAST:event_xlsaveActionPerformed

    private void xlsaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_xlsaveKeyPressed
     if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
     this.dispose();
     }
    }//GEN-LAST:event_xlsaveKeyPressed

   
 
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(savepdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    //</editor-fold>
    
        //</editor-fold>
    //</editor-fold>
    
        //</editor-fold>

 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JFileChooser xlsave;
    // End of variables declaration//GEN-END:variables
}
