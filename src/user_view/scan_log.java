/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_view;

import ansh_gui.Connect;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author lab
 */
public class scan_log extends javax.swing.JFrame {
Connection con=null;
PreparedStatement pst=null,ps1=null,ps2=null;
ResultSet rs=null;
        DefaultTableModel model = new DefaultTableModel();
String row,nos="0";
    /**
     * Creates new form scan_log
     */
    public scan_log() {
      
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monthcombo = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        yrcombo = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        master_table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rowcnt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nosubject = new javax.swing.JLabel();
        fltr = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Scan Log");

        monthcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel1.setText("Month");

        yrcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2025", "2026" }));

        jLabel2.setText("Year");

        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        master_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sr no", "Entry No", "Subject Id", "Name", "Gender", "Status", "DOB", "Age", "Comments", "DOS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(master_table);
        if (master_table.getColumnModel().getColumnCount() > 0) {
            master_table.getColumnModel().getColumn(0).setPreferredWidth(5);
            master_table.getColumnModel().getColumn(2).setPreferredWidth(20);
            master_table.getColumnModel().getColumn(3).setPreferredWidth(70);
            master_table.getColumnModel().getColumn(4).setPreferredWidth(2);
            master_table.getColumnModel().getColumn(5).setPreferredWidth(5);
            master_table.getColumnModel().getColumn(6).setPreferredWidth(15);
            master_table.getColumnModel().getColumn(7).setPreferredWidth(4);
        }

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Total No. of scans:");

        jLabel5.setText("Total No. of Subjects:");

        nosubject.setText("User code\n");

        fltr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "AD", "PAD", "MCI", "PD", "HY", "HO" }));

        jLabel6.setText("Filter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monthcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yrcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 349, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fltr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nosubject)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rowcnt)
                        .addGap(15, 15, 15))))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yrcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(fltr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monthcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rowcnt)
                    .addComponent(jLabel5)
                    .addComponent(nosubject))
                .addGap(13, 13, 13))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 public String getmonth(String str) {
    return str.length() < 3 ? str : str.substring(0, 3);
}
   
 private String getsubjectnum(String  key,String cond) throws SQLException
 {
           String month = (String) monthcombo.getSelectedItem();

     String year = (String) yrcombo.getSelectedItem();
    String sqlr = null;
    if(cond!="--")
    {        sqlr = "SELECT COUNT(DISTINCT SubjectId) FROM `Master_record` WHERE DOS LIKE '"+key+"' AND (`Status` LIKE '%"+cond+ "%');";}
           else if(("--".equals(month))&&("--".equals(year)))
           {
               sqlr = "SELECT COUNT(DISTINCT SubjectId) FROM `Master_record` WHERE 1;";
           }
    else
    {
          sqlr = "SELECT COUNT(DISTINCT SubjectId) FROM `Master_record` WHERE DOS LIKE '"+key+"';";
    }
    pst=con.prepareStatement(sqlr);
          //System.out.println(sqlr);
        rs= pst.executeQuery();
        if(rs.next())
        {
        nos = rs.getString(1);
         System.out.println(nos);
        }
       

     
          return nos;
 }
 
    private void Search_Data(){
      String month = (String) monthcombo.getSelectedItem();
     String merge = null,filter,sql,sql1,sql2;
     String year = (String) yrcombo.getSelectedItem();
     String yr=year.substring(2);
     con= Connect.ConnectDB();
       if(  "--".equals(month))
     {
      merge = "%/"+yr +"%";    
     }
       else if(("--".equals(month))&&("--".equals(year)))
       {
             sql1="SET @count:=0;"; 
         sql2=" SELECT  (@count:=@count+1) AS 'Sr no',Entry_no as 'Entry No',SubjectId as 'Subject Id',Name as 'Name',Gender as 'Gender',Status as 'Status',DOB as 'DOB',Age as 'Age',Comments as 'Comments',DOS as 'DOS' from Master_record  WHERE 1;";
       }
     else{
         String mon = getmonth(month);
            merge = "%"+ mon + "/"+yr +"%";
     }
     if((String)fltr.getSelectedItem()!="--")
     {
         filter=(String) fltr.getSelectedItem();
         sql1="SET @count:=0;"; 
         sql2=" SELECT  (@count:=@count+1) AS 'Sr no',Entry_no as 'Entry No',SubjectId as 'Subject Id',Name as 'Name',Gender as 'Gender',Status as 'Status',DOB as 'DOB',Age as 'Age',Comments as 'Comments',DOS as 'DOS' from Master_record  WHERE  (DOS LIKE '" +merge+"') AND (`Status` LIKE '%"+filter+ "%');";
  //    System.out.println(sql2+"\n");
     }
    
  else
     {
       sql1="SET @count:=0;"; 
         sql2=" SELECT  (@count:=@count+1) AS 'Sr no',Entry_no as 'Entry No',SubjectId as 'Subject Id',Name as 'Name',Gender as 'Gender',Status as 'Status',DOB as 'DOB',Age as 'Age',Comments as 'Comments',DOS as 'DOS' from Master_record  WHERE  DOS LIKE '" +merge+ "' ;";
     //      System.out.println(sql2+"\n");
     }
        
     try{
         ps2=con.prepareStatement(sql2);
         ps1=con.prepareStatement(sql1);
         ps1.executeQuery();
         rs= ps2.executeQuery();


        
        model = (DefaultTableModel) DbUtils.resultSetToTableModel(rs);
         master_table.setModel(model);
           TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        master_table.setRowSorter(sorter);
           int   rno=master_table.getRowCount();
     row= Integer.toString(rno);
rowcnt.setText(row);
nosubject.setText(getsubjectnum(merge,(String)fltr.getSelectedItem()));
         
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         }
     }
  
    
    
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        save frm = new save(master_table);
        frm.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     Search_Data();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(scan_log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(scan_log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(scan_log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(scan_log.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new scan_log().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox fltr;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable master_table;
    private javax.swing.JComboBox<String> monthcombo;
    private javax.swing.JLabel nosubject;
    private javax.swing.JLabel rowcnt;
    private javax.swing.JComboBox<String> yrcombo;
    // End of variables declaration//GEN-END:variables
}
