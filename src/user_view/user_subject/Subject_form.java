/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_view.user_subject;

import subject.*;
import java.awt.HeadlessException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.net.PrintCommandListener;
import org.apache.commons.net.ftp.*;
import user_view.pdf_viewer;

/**
 *
 * @author lab
 */
public class Subject_form extends javax.swing.JFrame {
            FTPClient ftp = null;
Connection con=null;
PreparedStatement pst=null;
ResultSet rs=null;
int boxs = 0;
int check_flag=0;
public String output,output1,dir,target;
    /**
     * Creates new form Subject_form
     */
    public Subject_form() {

        initComponents();


                  con= Connect.ConnectDB();
                    setLocationRelativeTo(null);
                 //   load.setVisible(false);
               //     progress.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fnm = new javax.swing.JTextField();
        lnm = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        hand = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        addr = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        edu = new javax.swing.JTextField();
        fmly = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        job = new javax.swing.JComboBox<>();
        jobotr = new javax.swing.JTextField();
        hab = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        hos = new javax.swing.JTextArea();
        jLabel29 = new javax.swing.JLabel();
        ms = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        rmrk1 = new javax.swing.JTextArea();
        jLabel32 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        height = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        weight = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        waist = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        hip = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        bp = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        pulse = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        ill_slf_desc = new javax.swing.JTextArea();
        illself = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        famself = new javax.swing.JRadioButton();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        fam_slf_desc = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        rmrks_gpe = new javax.swing.JTextArea();
        jLabel30 = new javax.swing.JLabel();
        bmi = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        whr = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dos = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dos1 = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        cstatus = new javax.swing.JRadioButton();
        mstatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        comment = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        remark = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        mflag = new javax.swing.JRadioButton();
        presc = new javax.swing.JRadioButton();
        prsc_rpt = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        load = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Subject Form");

        jTabbedPane5.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel3.setText("First Name");

        jLabel11.setText("Last Name");

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));

        jLabel12.setText("Gender");

        dob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dob.setMaxSelectableDate(new java.util.Date(1893439864000L));
        dob.setMinSelectableDate(new java.util.Date(-1893472136000L));
        dob.setMinimumSize(new java.awt.Dimension(2, 22));

        jLabel13.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel13.setText("DOB");

        jLabel14.setText("Handedness");

        hand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Left", "Right" }));

        jLabel15.setText("Phone");

        jLabel16.setText("email");

        addr.setColumns(20);
        addr.setRows(5);
        jScrollPane3.setViewportView(addr);

        jLabel17.setText("Address");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(fnm, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel12))
                                    .addComponent(jLabel11)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel15))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(hand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(phone, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lnm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(lnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(jLabel13))
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(36, 36, 36)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(304, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Personal Data", jPanel3);

        jLabel4.setText("Education");

        fmly.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nuclear", "Joint", "Extended", "Others" }));
        fmly.setSelectedItem("");

        jLabel19.setText("Family Type");

        jLabel18.setText("Occupation");

        job.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Employed", "Others" }));
        job.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobActionPerformed(evt);
            }
        });

        if("Others"!=job.getSelectedItem())
        {
            jobotr.setEnabled(false);
            jobotr.setEnabled(false);
        }
        else
        {
            jobotr.setEnabled(true);
        }
        jobotr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobotrActionPerformed(evt);
            }
        });

        hab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rural", "Suburban", "Urban" }));
        hab.setSelectedItem("");

        jLabel20.setText("Habitat");

        hos.setColumns(20);
        hos.setRows(5);
        jScrollPane6.setViewportView(hos);

        jLabel29.setText("Remarks");

        ms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unmarried", "Married", "Divorced", "Seperated", "Widow/Widower" }));

        jLabel31.setText("Marital Status");

        rmrk1.setColumns(20);
        rmrk1.setRows(5);
        jScrollPane8.setViewportView(rmrk1);

        jLabel32.setText("History of Substance");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fmly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(edu, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(job, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jobotr, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ms, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hab, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(edu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fmly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(job, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobotr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(38, 38, 38)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Sociodemographic Data", jPanel4);

        jLabel21.setText("Height");

        height.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "192", "193", "194", "195", "196", "197" }));
        height.setSelectedItem("");
        height.setToolTipText("in cm");

        jLabel22.setText("Weight");

        weight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150" }));
        weight.setSelectedItem("");
        weight.setToolTipText("in kg");

        jLabel23.setText("Waist (in cm)");

        jLabel24.setText("Hip (in cm)");

        jLabel25.setText("Blood Pressure");

        try {
            bp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel26.setText("Pulse Rate");

        ill_slf_desc.setColumns(20);
        ill_slf_desc.setRows(5);
        ill_slf_desc.setEnabled(false);
        jScrollPane4.setViewportView(ill_slf_desc);

        illself.setText("Past H/O\nMedical or Neurological\nIllness");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ill_slf_desc, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), illself, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jLabel27.setText("Description");

        famself.setText("Family H/O Medical or Neurological Illness");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, fam_slf_desc, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), famself, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jLabel28.setText("Description");

        fam_slf_desc.setColumns(20);
        fam_slf_desc.setRows(5);
        fam_slf_desc.setEnabled(false);
        jScrollPane5.setViewportView(fam_slf_desc);

        rmrks_gpe.setColumns(20);
        rmrks_gpe.setRows(5);
        jScrollPane7.setViewportView(rmrks_gpe);

        jLabel30.setText("Remarks");

        jLabel33.setText("BMI");

        jLabel34.setText("WHR");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(illself)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4)
                                    .addComponent(jLabel27)))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel30)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(famself)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane5)
                                        .addComponent(jLabel28))))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(whr, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(waist, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hip, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(34, 34, 34)
                                .addComponent(jLabel33)
                                .addGap(18, 18, 18)
                                .addComponent(bmi, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pulse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(waist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(hip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bmi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(bp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel34)
                    .addComponent(whr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(illself))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(famself))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(61, 61, 61))
        );

        jTabbedPane5.addTab("GPE Data", jPanel5);

        dos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dos.setMinimumSize(new java.awt.Dimension(2, 22));

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel6.setText("DOS");

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel7.setText("Prescription Date");

        dos1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dos1.setMinimumSize(new java.awt.Dimension(2, 22));

        desc.setColumns(20);
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        jLabel8.setText("Description");

        cstatus.setText("Clinical Status");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, desc, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), cstatus, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        mstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not sent to Radiologist", "Sent to Radiologist", "With Radiologist", "Received Report" }));

        comment.setColumns(20);
        comment.setRows(5);
        jScrollPane1.setViewportView(comment);

        jLabel1.setText("Comment");

        jLabel9.setText("Remarks");

        jLabel10.setText("MRI Status");

        mflag.setText("MRI Available");

        presc.setText("Prescription Available");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, prsc_rpt, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), presc, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        prsc_rpt.setText("Browse");
        prsc_rpt.setEnabled(false);
        prsc_rpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prsc_rptActionPerformed(evt);
            }
        });

        load.setText("Loading Image");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(42, 42, 42)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(203, 203, 203)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dos1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(remark, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(mflag))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(presc)
                                .addGap(45, 45, 45)
                                .addComponent(prsc_rpt)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cstatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2)))))
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(load)
                .addGap(18, 18, 18)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(7, 7, 7))
                            .addComponent(dos1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(jLabel6))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cstatus)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(presc)
                    .addComponent(prsc_rpt))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(mflag))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(remark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(load)
                            .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9)))
        );

        jTabbedPane5.addTab("Clinical Data", jPanel2);

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel5.setText("Subject ID");

        jToggleButton1.setText("Insert");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_mgr/sr.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton1)
                        .addComponent(jToggleButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void reset()
{
    fnm.setText("");
    lnm.setText("");
    phone.setText("");
    addr.setText("");
    edu.setText("");
    waist.setText("");
    bp.setText("");
    pulse.setText("");
    desc.setText("");
     comment.setText("");
      remark.setText("");
    email.setText("");
    ill_slf_desc.setText("");
    fam_slf_desc.setText("");
    hip.setText("");
     jobotr.setText("");
       mstatus.setSelectedItem("");
     gender.setSelectedItem("");
      fmly.setSelectedItem("");
       height.setSelectedItem("");
       weight.setSelectedItem("");
       job.setSelectedItem("");
       hab.setSelectedItem("");
       hand.setSelectedItem("");
       dos.setDate(null);
       dos1.setDate(null);
       dob.setDate(null);
       boxs = 1;
}

private int check()
{
       
       if (fnm.getText().equals("")) {
           
           return 1;
            }
        if (lnm.getText().equals("")) {
    
           return 2; 
            }
        if (dos.getDate()==null)
        {
         
           return 3;
            }
        if (dob.getDate().equals(null)) {
           
           return 4;
            }        
          if (addr.getText().equals("")) {
      
           return 5;
            }
          if(search.getText().equals(""))
              return 6;
       
      else
          {       
       return 0;
      }
       
       }

private void search(){
    con= Connect.ConnectDB();
    try {
        String sql="select SubjectID from Master_Sheet where SubjectId=?";
        PreparedStatement ps;
        ps = con.prepareStatement(sql);
        ps.setString(1,search.getText() );
        ResultSet result=ps.executeQuery();
        
        if(result.next())
        {
            search_personal();
            search_clinical();
            search_GPE();
            search_socio();
        }
        
        else
          JOptionPane.showMessageDialog( this, "No such Valid Entry in Master Sheet","Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        Logger.getLogger(Subject_form.class.getName()).log(Level.SEVERE, null, ex);
    }
}

private void search_personal()
{
    try{
          //Personal Data
          String sql="select * from Personal_data where SubjectId=?";
              PreparedStatement ps;
      ps = con.prepareStatement(sql);
            ps.setString(1,search.getText() );
            ResultSet result=ps.executeQuery();
            
            if(result.next())
            {
                fnm.setText(result.getString("First_name"));
                lnm.setText(result.getString("Last_name"));
           Date date1= new SimpleDateFormat("dd-MMM-yyyy").parse(result.getString("DOB"));
                    dob.setDate(date1);
   
         if(    "F".equals(result.getString("Gender")))
         gender.setSelectedItem("Female");
         else
              gender.setSelectedItem("Male");
         if(    "R".equals(result.getString("Handedness")))
         hand.setSelectedItem("Right");
         else
              hand.setSelectedItem("Left");
                    email.setText(result.getString("email_id"));
                phone.setText(result.getString("Mob_no"));
               addr.setText(result.getString("Address"));
          

          
                
            }
            
          
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
}

private void search_clinical()
{
    try{
          //Clinical Data
          String sql="select * from Clinical_data where SubjectId=?";
              PreparedStatement ps;
      ps = con.prepareStatement(sql);
            ps.setString(1,search.getText() );
            ResultSet result=ps.executeQuery();
            
            if(result.next())
            {
                   Date date1= new SimpleDateFormat("dd-MMM-yyyy").parse(result.getString("DOS"));
                    dos.setDate(date1);
                     Date date2= new SimpleDateFormat("dd-MMM-yyyy").parse(result.getString("Prescription_date"));
                    dos1.setDate(date2);
                    
                  int cs = Integer.parseInt(result.getString("Clinical_status"));
         if(cs==1)
         {
               desc.setText(result.getString("Clinical_research"));
               cstatus.setEnabled(true);
         }
       
          
           if(result.getBoolean("Prescription_avlbl")==false)
       {
                presc.setEnabled(true);
                prsc_rpt.setEnabled(true);
                prsc_rpt.setText("View");
       }
           else
               presc.setEnabled(false);
         mstatus.setSelectedItem(result.getString("MRI_report_status"));
                 if(result.getBoolean("MRI_report_available")==false)
       {
              mflag.setEnabled(true);
       }
         else
             mflag.setEnabled(false);
               
          comment.setText(result.getString("Comment"));
          remark.setText(result.getString("Remarks"));
          
                
            }
   else
                     JOptionPane.showMessageDialog( this, "No such Subject ID entered in Subject Data","Error", JOptionPane.ERROR_MESSAGE);
            
            
          
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
}
private void search_GPE()
{
    try{
          //GPE Data
          String sql="select * from GPE_data where SubjectId=?";
              PreparedStatement ps;
      ps = con.prepareStatement(sql);
            ps.setString(1,search.getText() );
            ResultSet result=ps.executeQuery();
            
            if(result.next())
            {
                //UPDATE `GPE_data` SET `BP` = '81/230', `illself` = 'Psych Diso', `pmn` = '1', `remarks` = 'None' WHERE `GPE_data`.`SubjectId` = 'HU2730';
                waist.setText(result.getString("waist"));
                  hip.setText(result.getString("hip"));
                    bp.setText(result.getString("BP"));
                    pulse.setText(result.getString("pulse"));
                height.setSelectedItem(result.getString("Height"));
       weight.setSelectedItem(result.getString("Weight"));
       if(result.getBoolean("pmn")==false)
       {
        ill_slf_desc.setText(result.getString("illself"));
         ill_slf_desc.setEnabled(true);
       }
    if(result.getBoolean("fmn")==false)
       {
        fam_slf_desc.setText(result.getString("illself"));
         fam_slf_desc.setEnabled(true);
       }
          rmrks_gpe.setText(result.getString("remarks"));
                
            }
   
            
            
          
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
}
private void search_socio()
{
    try{
          //Socio Demographic Data
          String sql="select * from Sociodemographic_data where SubjectId=?";
              PreparedStatement ps;
      ps = con.prepareStatement(sql);
            ps.setString(1,search.getText() );
            ResultSet result=ps.executeQuery();
            
            if(result.next())
            {
                //UPDATE `GPE_data` SET `BP` = '81/230', `illself` = 'Psych Diso', `pmn` = '1', `remarks` = 'None' WHERE `GPE_data`.`SubjectId` = 'HU2730';
                edu.setText(result.getString("Education"));
                  fmly.setSelectedItem(result.getString("family_typ"));
                job.setSelectedItem(result.getString("Occupation"));
                ms.setSelectedItem(result.getString("Maritial_status"));
                jobotr.setEnabled(false);
                   if("Others".equals(result.getString("Occupation")))
                   {
                       jobotr.setText(result.getString("Other_job"));
                       jobotr.setEnabled(true);
                   }
  hab.setSelectedItem(result.getString("Habitat"));
         hos.setText(result.getString("Remarks"));
   
            }
   
            
            
          
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
}
private void update()
{
    update_pers();
    update_clinic();
    update_gpe();
    update_socio();
}

private void update_pers()
{
   
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate()); 
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Master_Sheet` SET `SubjectID` = 'HU_2758' WHERE `Master_Sheet`.`EntryID` = 1;
       String sql= "UPDATE Personal_data SET  First_name = ?, Last_name = ?, DOB = ?, Gender = ?, Handedness = ?, Mob_no = ?, email_id = ?, Address = ? WHERE SubjectId = ?";
      
      pst=con.prepareStatement(sql);
         pst.setString(1, fnm.getText());
       pst.setString(2, lnm.getText());
      pst.setString(3, output);
       if(    "Female".equals (gender.getSelectedItem()))
          pst.setString(4, "F");
       else
            pst.setString(4, "M");
        if(    "Right".equals (gender.getSelectedItem()))
          pst.setString(5, "R");
       else
            pst.setString(5, "L");
        //  pst.setString(5, (String) hand.getSelectedItem());
          pst.setString(6, phone.getText());
    pst.setString(7, email.getText());
     pst.setString(8, addr.getText());
     pst.setString(9, search.getText());
      pst.execute();
       
     // JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
}


private void update_clinic()
{
   
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
            output=sdf.format(dos.getDate());    
output1=sdf.format(dos1.getDate());    
   
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Master_Sheet` SET `SubjectID` = 'HU_2758' WHERE `Master_Sheet`.`EntryID` = 1;
       String sql= "UPDATE `Clinical_data` SET  `DOS` = ?, `Prescription_date` = ?, `Clinical_status` = ?, `Clinical_research` = ?, `Prescription_avlbl` = ?, `MRI_report_status` = ?, `MRI_report_available` = ?, `Comment` = ?,`Remarks` = ? WHERE `SubjectId` = ?";
      
      pst=con.prepareStatement(sql);
   
        pst.setString(1, output);
         pst.setString(2, output1);
         if(cstatus.isEnabled())
         {   pst.setString(3,"1");
          pst.setString(4, desc.getText());
         }
         else
              pst.setString(3,"0");
           if(presc.isEnabled())
           {
                pst.setString(5,"1");
           }
           else
               pst.setString(5,"0");
           pst.setString(6, (String) mstatus.getSelectedItem());
         if(mflag.isEnabled())
           {
                pst.setString(7,"1");
           }
           else
               pst.setString(7,"0");
       pst.setString(8, comment.getText());

          pst.setString(9, remark.getText());
    pst.setString(10,search.getText());
        pst.execute();
       
     // JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
}

private void update_gpe()
{
   
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate());    
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `GPE_data` SET `SD_id` = '104', `Height` = '174', `Weight` = '73', `BMI` = '22', `waist` = '32', `hip` = '33', `BP` = '73/130', `pulse` = '73', `fmn` = '1', `fmlill` = 'Somwat' WHERE `GPE_data`.`SubjectId` = 'HU2811';
       String sql= "UPDATE `GPE_data` SET  `Height` = ?, `Weight` = ?, `BMI` = ?,`WHR` = ?, `waist` = ?, `hip` = ?, `BP` = ?, `pulse` = ?, `illself` = ?, `pmn` = ?, `fmn` = ?, `fmlill` = ?, `remarks` = ? WHERE `SubjectId` = ?";
      
      pst=con.prepareStatement(sql);
         pst.setString(1, (String) height.getSelectedItem());
       pst.setString(2, (String) weight.getSelectedItem());
      pst.setString(3, bmi.getText());
       pst.setString(4, whr.getText());
          pst.setString(5, waist.getText());
          pst.setString(6, hip.getText());
          pst.setString(7, bp.getText());
            pst.setString(8, pulse.getText());
          if(illself.isEnabled())
          {   pst.setString(9,ill_slf_desc.getText());
          pst.setString(10,"1");
          }
          else
          {    pst.setString(9,"");
               pst.setString(10,"0");
          }
            if(famself.isEnabled())
            { pst.setString(12,fam_slf_desc.getText());
              pst.setString(11,"1");
            }
          else
            {
                pst.setString(12,"");
                 pst.setString(11,"0");
            }
    pst.setString(13, rmrks_gpe.getText());
     pst.setString(14, search.getText());
      pst.execute();
       
      //JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
}

private void update_socio()
{
   
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate());    
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Sociodemographic_data` SET `Education` = 'Matriculate', `family_typ` = 'Nuclear', `Maritial_status` = 'Divorced', `Occupation` = 'Student', `Other_job` = '', `Habitat` = 'Urban', `Remarks` = 'Update Generation' WHERE `Sociodemographic_data`.`SubjectId` = 'HU2811';
       String sql= "UPDATE `Sociodemographic_data` SET `Education` = ?, `family_typ` = ?, `Maritial_status` = ?, `Occupation` = ?, `Other_job` = ?,`HOS` = ?, `Habitat` = ?, `Remarks` = ? WHERE `SubjectId` = ?";
      
      pst=con.prepareStatement(sql);
   
      pst.setString(1, edu.getText());
       pst.setString(2, (String) fmly.getSelectedItem());
       pst.setString(3, (String) ms.getSelectedItem());
          pst.setString(4, (String) job.getSelectedItem());
             if("Others".equals (job.getSelectedItem()))
                   {
                         pst.setString(5, jobotr.getText());
                   }
             else
                    pst.setString(5, "");
              pst.setString(6, hos.getText());
          pst.setString(7, (String) hab.getSelectedItem());
         
    pst.setString(8, rmrk1.getText());
     pst.setString(9, search.getText());
      pst.execute();
       
      JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
}
    private void jobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobActionPerformed
      String value= (String)job.getSelectedItem();
      if(value=="Others")
      {
          jobotr.setEnabled(true);
      }
      else
          jobotr.setEnabled(false);
    }//GEN-LAST:event_jobActionPerformed

    private void jobotrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobotrActionPerformed

       
    }//GEN-LAST:event_jobotrActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       reset();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   search();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
   search();
    }//GEN-LAST:event_searchActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
    
        try {
        String sql="select SubjectID from Master_Sheet where SubjectId=?";
        PreparedStatement ps;
        ps = con.prepareStatement(sql);
        ps.setString(1,search.getText() );
        ResultSet result=ps.executeQuery();
        check_flag=check();
        if(check_flag==0&&result.next())
        {
        insert_clinic();
 insert_pers();
 insert_socio();
 insert_gpe();
    }
        
        else if(check_flag==1)
            JOptionPane.showMessageDialog( this, "Please enter First Name","Error", JOptionPane.ERROR_MESSAGE);
        else if(check_flag==2)
                   JOptionPane.showMessageDialog( this, "Please enter Last Name","Error", JOptionPane.ERROR_MESSAGE);
         else if(check_flag==3)
                     JOptionPane.showMessageDialog( this, "Please enter Date of Scan","Error", JOptionPane.ERROR_MESSAGE);
         else if(check_flag==4)
                   JOptionPane.showMessageDialog( this, "Please enter Date of Birth","Error", JOptionPane.ERROR_MESSAGE);
           else if(check_flag==5)
                        JOptionPane.showMessageDialog( this, "Please enter Address.","Error", JOptionPane.ERROR_MESSAGE);
        else if(check_flag==6)
                        JOptionPane.showMessageDialog( this, "Please enter Valid Subject ID.","Error", JOptionPane.ERROR_MESSAGE);
           else
         JOptionPane.showMessageDialog( this, "No such Valid Entry in Master Sheet","Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        Logger.getLogger(Subject_form.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void insert_clinic()
    {
        
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
            output=sdf.format(dos.getDate());    
output1=sdf.format(dos1.getDate());    
   
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Master_Sheet` SET `SubjectID` = 'HU_2758' WHERE `Master_Sheet`.`EntryID` = 1;
       String sql= "INSERT INTO `Clinical_data` (`SubjectId`, `DOS`, `Prescription_date`, `Clinical_status`, `Clinical_research`, `Prescription_avlbl`, `MRI_report_status`, `MRI_report_available`, `Comment`, `Remarks`) VALUES (?, ?, ?,?, ?, ?, ?,?, ?,?);   ";
      
      pst=con.prepareStatement(sql);
       pst.setString(1,search.getText());
        pst.setString(2, output);
         pst.setString(3, output1);
         if(cstatus.isEnabled())
         {   pst.setString(4,"1");
          pst.setString(5, desc.getText());
         }
         else
              pst.setString(4,"0");
           if(presc.isEnabled())
           {
                pst.setString(6,"1");
           }
           else
               pst.setString(6,"0");
           pst.setString(7, (String) mstatus.getSelectedItem());
         if(mflag.isEnabled())
           {
                pst.setString(8,"1");
           }
           else
               pst.setString(8,"0");
       pst.setString(9, comment.getText());

          pst.setString(10, remark.getText());

        pst.execute();
       
     // JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
    }
    
    private void insert_pers()
    {
        
   
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate()); 
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Master_Sheet` SET `SubjectID` = 'HU_2758' WHERE `Master_Sheet`.`EntryID` = 1;
       String sql= "INSERT INTO `Personal_data` (`SubjectId`, `First_name`, `Last_name`, `DOB`, `Gender`, `Handedness`, `Mob_no`,  `email_id`, `Address`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);";
      
      pst=con.prepareStatement(sql);
         pst.setString(1, search.getText());
       pst.setString(2, fnm.getText());
       pst.setString(3, lnm.getText());
      pst.setString(4, output);
       if(    "Female".equals (gender.getSelectedItem()))
          pst.setString(5, "F");
       else
            pst.setString(5, "M");
         if(    "Right".equals (gender.getSelectedItem()))
          pst.setString(6, "R");
       else
            pst.setString(6, "L");
          pst.setString(7, phone.getText());
    pst.setString(8, email.getText());
     pst.setString(9, addr.getText());
          pst.execute();
       
     // JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
    }
    
    
   private void insert_socio()
   {
       
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate());    
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `Sociodemographic_data` SET `Education` = 'Matriculate', `family_typ` = 'Nuclear', `Maritial_status` = 'Divorced', `Occupation` = 'Student', `Other_job` = '', `Habitat` = 'Urban', `Remarks` = 'Update Generation' WHERE `Sociodemographic_data`.`SubjectId` = 'HU2811';
       String sql= "INSERT INTO `Sociodemographic_data` (`SubjectId`, `Education`, `family_typ`,  `Maritial_status`, `Occupation`, `Other_job`, `Habitat`, `HOS`,  `Remarks`) VALUES (?,  ?, ?, ?, ?, ?, ?, ?, ?);";
      
      pst=con.prepareStatement(sql);
        pst.setString(1, search.getText());
      pst.setString(2, edu.getText());
       pst.setString(3, (String) fmly.getSelectedItem());
       pst.setString(4, (String) ms.getSelectedItem());
          pst.setString(5, (String) job.getSelectedItem());
             if("Others".equals (job.getSelectedItem()))
                   {
                         pst.setString(6, jobotr.getText());
                   }
             else
                    pst.setString(6, "");
          pst.setString(7, (String) hab.getSelectedItem());
             pst.setString(8, hos.getText());
          
         
    pst.setString(9, rmrk1.getText());

      pst.execute();
       
  //    JOptionPane.showMessageDialog(this,"Successfully updated","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
   }
   
   
   private void insert_gpe()
   {
       
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
output=sdf.format(dob.getDate());    
      con=Connect.ConnectDB();
   //  String SubjectID1= String.valueOf(subjid.getText());
     //UPDATE `GPE_data` SET `SD_id` = '104', `Height` = '174', `Weight` = '73', `BMI` = '22', `waist` = '32', `hip` = '33', `BP` = '73/130', `pulse` = '73', `fmn` = '1', `fmlill` = 'Somwat' WHERE `GPE_data`.`SubjectId` = 'HU2811';
       String sql= "INSERT INTO `GPE_data` (`SubjectId`, `Height`, `Weight`, `BMI`, `WHR`, `waist`, `hip`, `BP`, `pulse`, `illself`, `pmn`, `fmn`, `fmlill`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
      
      pst=con.prepareStatement(sql);
     pst.setString(1, search.getText());
      pst.setString(2, (String) height.getSelectedItem());
       pst.setString(3, (String) weight.getSelectedItem());
      pst.setString(4, bmi.getText());
      pst.setString(5, whr.getText());
          pst.setString(6, waist.getText());
          pst.setString(7, hip.getText());
          pst.setString(8, bp.getText());
            pst.setString(9, pulse.getText());
          if(illself.isEnabled())
          {   pst.setString(10,ill_slf_desc.getText());
          pst.setString(11,"1");
          }
          else
          {    pst.setString(10,"");
               pst.setString(11,"0");
          }
            if(famself.isEnabled())
            { pst.setString(13,fam_slf_desc.getText());
              pst.setString(12,"1");
            }
          else
            {
                pst.setString(13,"");
                 pst.setString(11,"0");
            }
    pst.setString(14, rmrks_gpe.getText());
     //pst.setString(14, search.getText()); 
      pst.execute();
       
     JOptionPane.showMessageDialog(this,"Successfully Inserted","User info",JOptionPane.INFORMATION_MESSAGE); 
     
        }catch(HeadlessException | SQLException ex){
           JOptionPane.showMessageDialog(this,ex); 
                }
    
   }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
int dialogButton = JOptionPane.YES_NO_OPTION;
int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure to overwrite the Existing Data", "Warning", dialogButton);
if(dialogResult == 0) {
  update();
} else {
reset();
} 

    }//GEN-LAST:event_jButton1ActionPerformed
public void FTPDownloader(String host, String user, String pwd) throws Exception {


        ftp = new FTPClient();
        ftp.addProtocolCommandListener(new PrintCommandListener(new PrintWriter(System.out)));
        int reply;
        ftp.connect(host);
        reply = ftp.getReplyCode();
        boolean b = FTPReply.isPositiveCompletion(reply);
        if (!b) {
            ftp.disconnect();
            throw new Exception("Exception in connecting to FTP Server");
        }
        ftp.login(user, pwd);
        ftp.setFileType(FTP.BINARY_FILE_TYPE);
        ftp.enterLocalPassiveMode();
    }


 public void downloadFile(String remoteFilePath, String localFilePath) {
        try (FileOutputStream fos = new FileOutputStream(localFilePath)) {
           this.ftp.retrieveFile(remoteFilePath, fos);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void prsc_rptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prsc_rptActionPerformed
if("View".equals(prsc_rpt.getText()))
{
    try {
        
        con=Connect.ConnectDB();
        String  sqlr = "SELECT location FROM `presc_upload` WHERE id = ?";
        pst=con.prepareStatement(sqlr);
        pst.setString(1, search.getText());
        rs= pst.executeQuery();
   if(rs.next())
   { dir = rs.getString(1);
   target =  "/home/lab/Music/tmp.pdf";
try {
             FTPDownloader("172.31.15.127", "ninslab", "redapple@123##");
            downloadFile("img/"+dir ,target);
            //System.out.println("FTP File downloaded successfully");
                load.setVisible(true);
                    progress.setVisible(true);
    for(int i=0;i<=100;i++)
    {
        progress.setValue(i);
    }
            ftp.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
 
       pdf_viewer view = new pdf_viewer(target);
       view.setVisible(true);
       
   }
    } catch (SQLException ex) {
        Logger.getLogger(Subject_form.class.getName()).log(Level.SEVERE, null, ex);      
    }
    
   
}
else if("Browse".equals(prsc_rpt.getText()))
{

   Fileopen win = new Fileopen();
   win.setVisible(true);
  
  
}
    }//GEN-LAST:event_prsc_rptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Subject_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Subject_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Subject_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Subject_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Subject_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addr;
    private javax.swing.JTextField bmi;
    private javax.swing.JFormattedTextField bp;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextArea comment;
    private javax.swing.JRadioButton cstatus;
    private javax.swing.JTextArea desc;
    private com.toedter.calendar.JDateChooser dob;
    private com.toedter.calendar.JDateChooser dos;
    private com.toedter.calendar.JDateChooser dos1;
    private javax.swing.JTextField edu;
    private javax.swing.JTextField email;
    private javax.swing.JTextArea fam_slf_desc;
    private javax.swing.JRadioButton famself;
    private javax.swing.JComboBox<String> fmly;
    private javax.swing.JTextField fnm;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JComboBox<String> hab;
    private javax.swing.JComboBox<String> hand;
    private javax.swing.JComboBox<String> height;
    private javax.swing.JTextField hip;
    private javax.swing.JTextArea hos;
    private javax.swing.JTextArea ill_slf_desc;
    private javax.swing.JRadioButton illself;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> job;
    private javax.swing.JTextField jobotr;
    private javax.swing.JTextField lnm;
    private javax.swing.JLabel load;
    private javax.swing.JRadioButton mflag;
    private javax.swing.JComboBox<String> ms;
    private javax.swing.JComboBox<String> mstatus;
    private javax.swing.JTextField phone;
    private javax.swing.JRadioButton presc;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton prsc_rpt;
    private javax.swing.JTextField pulse;
    private javax.swing.JTextField remark;
    private javax.swing.JTextArea rmrk1;
    private javax.swing.JTextArea rmrks_gpe;
    private javax.swing.JTextField search;
    private javax.swing.JTextField waist;
    private javax.swing.JComboBox<String> weight;
    private javax.swing.JTextField whr;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
